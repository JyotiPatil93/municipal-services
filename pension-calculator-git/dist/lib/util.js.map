{"version":3,"sources":["../../src/lib/util.js"],"names":["toRes","res","status","err","thing","send","toObject","json"],"mappings":";;;;;QASgBA,K,GAAAA,K;AAThB;;;;;;;;;AASO,SAASA,KAAT,CAAeC,GAAf,EAAkC;AAAA,MAAdC,MAAc,uEAAL,GAAK;;AACvC,SAAO,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACrB,QAAID,GAAJ,EAAS,OAAOF,IAAIC,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqBF,GAArB,CAAP;;AAET,QAAIC,SAAS,OAAOA,MAAME,QAAb,KAA0B,UAAvC,EAAmD;AACjDF,cAAQA,MAAME,QAAN,EAAR;AACD;AACDL,QAAIC,MAAJ,CAAWA,MAAX,EAAmBK,IAAnB,CAAwBH,KAAxB;AACD,GAPD;AAQD","file":"util.js","sourcesContent":["/**\tCreates a callback that proxies node callback style arguments to an Express Response object.\n *\t@param {express.Response} res\tExpress HTTP Response\n *\t@param {number} [status=200]\tStatus code to send on success\n *\n *\t@example\n *\t\tlist(req, res) {\n *\t\t\tcollection.find({}, toRes(res));\n *\t\t}\n */\nexport function toRes(res, status = 200) {\n  return (err, thing) => {\n    if (err) return res.status(500).send(err);\n\n    if (thing && typeof thing.toObject === \"function\") {\n      thing = thing.toObject();\n    }\n    res.status(status).json(thing);\n  };\n}\n"]}