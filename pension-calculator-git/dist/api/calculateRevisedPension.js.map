{"version":3,"sources":["../../src/api/calculateRevisedPension.js"],"names":["asyncHandler","require","api","post","res","next","body","RequestInfo","ProcessInstances","tenantId","mdms","pensionBenefits","pensionRevision","rules","benefits","i","length","String","benefitCode","toUpperCase","totalPension","finalBenefitValue","netDeductions","finalCalculatedPension","processInstances","push","response","ResponseInfo","json"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAMA,eAAeC,QAAQ,uBAAR,CAArB;;kBAGe,YAAM;AACnB,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,2BADF,EAEEH;AAAA,wFAAa,wBAAiBI,GAAjB,EAAsBC,IAAtB;AAAA,UAASC,IAAT,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGI,wBAASA,KAAKC,WAAd,EAA2BD,KAAKE,gBAAL,CAAsB,CAAtB,EAAyBC,QAApD,CAHJ;;AAAA;AAGTC,kBAHS;AAIPC,6BAJO,GAIS,mBAAID,IAAJ,EAAS,iCAAT,CAJT;AAMTE,6BANS,GAMON,KAAKE,gBAAL,CAAsB,CAAtB,EAAyBI,eANhC;AAOTC,mBAPS,GAOH;AACNC,0BAAUH;AADJ,eAPG;AAYTG,sBAZS,GAYA,iDAAwBH,eAAxB,EAAwCC,gBAAgB,CAAhB,CAAxC,CAZA;AAcJG,eAdI,GAcA,CAdA;;AAAA;AAAA,oBAcGA,IAAID,SAASE,MAdhB;AAAA;AAAA;AAAA;;AAAA,4BAeJC,OAAOH,SAASC,CAAT,EAAYG,WAAnB,EAAgCC,WAAhC,EAfI;AAAA,8CAgBJ,eAhBI,wBAmBJ,eAnBI,wBAsBJ,0BAtBI;AAAA;;AAAA;AAiBPP,8BAAgB,CAAhB,EAAmBQ,YAAnB,GAAgCN,SAASC,CAAT,EAAYM,iBAA5C;AAjBO;;AAAA;AAoBPT,8BAAgB,CAAhB,EAAmBU,aAAnB,GAAiCR,SAASC,CAAT,EAAYM,iBAA7C;AApBO;;AAAA;AAuBPT,8BAAgB,CAAhB,EAAmBW,sBAAnB,GAA0CT,SAASC,CAAT,EAAYM,iBAAtD;AAvBO;;AAAA;AAcwBN,iBAdxB;AAAA;AAAA;;AAAA;AAgCTS,8BAhCS,GAgCQ,EAhCR;;AAiCbA,+BAAiBC,IAAjB,CAAsB;AACpBb,iCAAiBA;AADG,eAAtB;;AAIIc,sBArCS,GAqCE;AACbC,8BAAc,sCAA0BrB,KAAKC,WAA/B,EAA4C,IAA5C,CADD;AAEbC,kCAAiBgB;AAFJ,eArCF;;AAyCbpB,kBAAIwB,IAAJ,CAASF,QAAT;;AAzCa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAFF;AA+CA,SAAOxB,GAAP;AACD,C","file":"calculateRevisedPension.js","sourcesContent":["import { Router } from \"express\";\r\nimport { calculateRevisedPension} from \"../utils/calculationManager\";\r\nimport { getNQS,getNQSYear,getNQSMonth,getNQSDay} from \"../utils/calculationHelper\";\r\nimport envVariables from \"../envVariables\";\r\nimport { requestInfoToResponseInfo} from \"../utils\";\r\nimport mdmsData from \"../utils/mdmsData\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport set from \"lodash/set\";\r\nimport get from \"lodash/get\";\r\nimport filter from \"lodash/filter\";\r\nconst asyncHandler = require(\"express-async-handler\");\r\n\r\n\r\nexport default () => {\r\n  let api = Router();\r\n  api.post(\r\n    \"/_calculateRevisedPension\",\r\n    asyncHandler(async ({ body }, res, next) => {\r\n    \r\n    \r\n    let mdms = await mdmsData(body.RequestInfo, body.ProcessInstances[0].tenantId);\r\n    const pensionBenefits=get(mdms,\"MdmsRes.pension.pensionRevision\");    \r\n\r\n    let pensionRevision=body.ProcessInstances[0].pensionRevision;\r\n    let rules={\r\n        benefits: pensionBenefits\r\n    };\r\n    \r\n      \r\n    let benefits=calculateRevisedPension(pensionBenefits,pensionRevision[0]);\r\n\r\n    for (var i = 0; i < benefits.length; i++) {       \r\n      switch(String(benefits[i].benefitCode).toUpperCase()){ \r\n        case \"TOTAL_PENSION\":\r\n          pensionRevision[0].totalPension=benefits[i].finalBenefitValue;                  \r\n          break; \r\n        case \"NET_DEDUCTION\":\r\n          pensionRevision[0].netDeductions=benefits[i].finalBenefitValue;                  \r\n          break; \r\n        case \"FINAL_CALCULATED_PENSION\":\r\n          pensionRevision[0].finalCalculatedPension=benefits[i].finalBenefitValue;                  \r\n          break; \r\n      }\r\n      \r\n    }\r\n\r\n\r\n\r\n      \r\n    let processInstances=[];\r\n    processInstances.push({\r\n      pensionRevision: pensionRevision\r\n    });\r\n    \r\n    let response = {        \r\n      ResponseInfo: requestInfoToResponseInfo(body.RequestInfo, true),\r\n      ProcessInstances:processInstances\r\n    };\r\n    res.json(response);\r\n           \r\n    })\r\n  );\r\n  return api;\r\n};\r\n"]}