/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.egov.inv.api;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.egov.inv.model.ErrorRes;
import org.egov.inv.model.RequestInfo;
import org.egov.inv.model.SupplierAdvanceRequisitionRequest;
import org.egov.inv.model.SupplierAdvanceRequisitionResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
@javax.annotation.Generated(value = "org.egov.inv.codegen.languages.SpringCodegen", date = "2018-01-03T10:57:16.070Z")

@Api(value = "supplieradvancerequisitions", description = "the supplieradvancerequisitions API")
public interface SupplieradvancerequisitionsApi {

    @ApiOperation(value = "Create new supplieradvancerequisition", notes = "Whenever a supplieradvancerequisition is created, this API will hold the common set of information. This API will be invoked intenrally during supplieradvancerequisition creation.", response = SupplierAdvanceRequisitionResponse.class, tags={ "SupplierAdvanceRequisition", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "supplieradvancerequisition created Successfully", response = SupplierAdvanceRequisitionResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/supplieradvancerequisitions/_create",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SupplierAdvanceRequisitionResponse> supplieradvancerequisitionsCreatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Create new supplieradvancerequisition"  ) @RequestBody SupplierAdvanceRequisitionRequest supplierAdvanceRequisitionRequest);


    @ApiOperation(value = "Get the list of common supplieradvancerequisitions information", notes = "SupplierAdvanceRequisition is parent object that holds the common information for both.", response = SupplierAdvanceRequisitionResponse.class, tags={ "SupplierAdvanceRequisition", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "SupplierAdvanceRequisition retrieved Successfully", response = SupplierAdvanceRequisitionResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/supplieradvancerequisitions/_search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SupplierAdvanceRequisitionResponse> supplieradvancerequisitionsSearchPost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Parameter to carry Request metadata in the request body"  ) @RequestBody RequestInfo requestInfo,@ApiParam(value = "reference no of the supplier ") @RequestParam(value = "supplier", required = false) String supplier,@ApiParam(value = "reference no of the purchaseOrder placed with the supplier ") @RequestParam(value = "purchaseOrder", required = false) String purchaseOrder,@ApiParam(value = "status of the SupplierAdvanceRequisition ") @RequestParam(value = "sarStatus", required = false) String sarStatus,@ApiParam(value = "stateId of the SupplierAdvanceRequisition ") @RequestParam(value = "stateId", required = false) String stateId,@ApiParam(value = "Date on which purchaseOrder raised with supplier ") @RequestParam(value = "purchaseOrderDate", required = false) Long purchaseOrderDate);


    @ApiOperation(value = "Update any of the supplieradvancerequisition", notes = "The common set of information shared by supplieradvancerequisition will be updated upon invoking this API.", response = SupplierAdvanceRequisitionResponse.class, tags={ "SupplierAdvanceRequisition", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "supplieradvancerequisition updated Successfully", response = SupplierAdvanceRequisitionResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/supplieradvancerequisitions/_update",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<SupplierAdvanceRequisitionResponse> supplieradvancerequisitionsUpdatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "common Request info"  ) @RequestBody SupplierAdvanceRequisitionRequest supplierAdvanceRequisitionRequest);

}