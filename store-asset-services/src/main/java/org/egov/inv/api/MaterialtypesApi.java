/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package org.egov.inv.api;

import java.util.List;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.egov.common.contract.request.RequestInfo;
import org.egov.inv.model.ErrorRes;
import org.egov.inv.model.MaterialTypeRequest;
import org.egov.inv.model.MaterialTypeResponse;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-01-10T06:55:29.202Z")

@Api(value = "materialtypes", description = "the materialtypes API")
public interface MaterialtypesApi {

    @ApiOperation(value = "Create  new  material types", notes = "Create  new material types", response = MaterialTypeResponse.class, tags={ "MaterialType", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Material Type created Successfully", response = MaterialTypeResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/materialtypes/_create",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<MaterialTypeResponse> materialtypesCreatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Create  new"  )  @Valid @RequestBody MaterialTypeRequest materialTypeRequest);


    @ApiOperation(value = "Get the list of Material Types", notes = "Material Types", response = MaterialTypeResponse.class, tags={ "MaterialType", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Material Type retrieved Successfully", response = MaterialTypeResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/materialtypes/_search",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<MaterialTypeResponse> materialtypesSearchPost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "Parameter to carry Request metadata in the request body"  )  @Valid @RequestBody RequestInfo requestInfo, @Size(max=50)@ApiParam(value = "comma seperated list of Ids") @RequestParam(value = "ids", required = false) List<String> ids,@ApiParam(value = "code of the Material Type ") @RequestParam(value = "code", required = false) String code,@ApiParam(value = "name of the Material Type ") @RequestParam(value = "name", required = false) String name,@ApiParam(value = "store to which material type is mapped ") @RequestParam(value = "store", required = false) String store, @Min(0) @Max(100)@ApiParam(value = "Number of records returned.", defaultValue = "20") @RequestParam(value = "pageSize", required = false, defaultValue="20") Integer pageSize,@ApiParam(value = "Page number", defaultValue = "1") @RequestParam(value = "pageNumber", required = false, defaultValue="1") Integer pageNumber,@ApiParam(value = "This takes any field from the Object seperated by comma and asc,desc keywords. example name asc,code desc or name,code or name,code desc", defaultValue = "id") @RequestParam(value = "sortBy", required = false, defaultValue="id") String sortBy);


    @ApiOperation(value = "Update any of the material types", notes = "Update any of the material types", response = MaterialTypeResponse.class, tags={ "MaterialType", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Material Type updated Successfully", response = MaterialTypeResponse.class),
        @ApiResponse(code = 400, message = "Invalid Input", response = ErrorRes.class) })
    
    @RequestMapping(value = "/materialtypes/_update",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<MaterialTypeResponse> materialtypesUpdatePost( @NotNull@ApiParam(value = "Unique id for a tenant.", required = true) @RequestParam(value = "tenantId", required = true) String tenantId,@ApiParam(value = "common Request info"  )  @Valid @RequestBody MaterialTypeRequest materialTypeRequest);

}
