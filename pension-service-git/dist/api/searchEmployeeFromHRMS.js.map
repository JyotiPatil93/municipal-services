{"version":3,"sources":["../../src/api/searchEmployeeFromHRMS.js"],"names":["asyncHandler","require","config","db","api","post","request","res","next","response","ResponseInfo","body","RequestInfo","Employees","queryObj","JSON","parse","stringify","query","pensionEmployees","code","name","departments","tenantId","hrmsResponse","hrmsEmployee","logger","debug","modifiedQueryDobNum","dob","x","user","i","length","dateOfSuperannuation","employee","pensionEmployeeId","id","dateOfJoining","dateOfAppointment","dateOfRetirement","dateOfDeath","department","assignments","designation","push","json"],"mappings":"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","file":"searchEmployeeFromHRMS.js","sourcesContent":["import { Router } from \"express\";\nimport { requestInfoToResponseInfo,getEmployeeDetails,epochToYmd ,convertDateToEpoch, adjust530} from \"../utils\";\nimport isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport some from \"lodash/some\";\nimport { actions } from \"../utils/search\";\nimport { validatePensionNotificationRegisterSearchModel } from \"../utils/modelValidation\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport filter from \"lodash/filter\";\nimport { intConversion} from \"../utils/search\";\nconst asyncHandler = require(\"express-async-handler\");\n\nimport logger from \"../config/logger\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_searchEmployeeFromHRMS\",\n    asyncHandler(async (request, res, next) => {     \n      \n      let response = {\n        ResponseInfo: requestInfoToResponseInfo(request.body.RequestInfo, true),\n        Employees: []\n      };\n\n      const queryObj = JSON.parse(JSON.stringify(request.query));\n      \n\n     \n      /*\n      let errors = validatePensionNotificationRegisterSearchModel(queryObj);\n      if (errors.length > 0) {\n        next({\n          errorType: \"custom\",\n          errorReponse: {\n            ResponseInfo: requestInfoToResponseInfo(\n              request.body.RequestInfo,\n              true\n            ),\n            Errors: errors\n          }\n        });\n        return;\n      }\n      */\n     let pensionEmployees=[];\n     let code=\"\";\n     let name=\"\";\n     let departments=\"\";\n     \n     if (queryObj.code) {\n      code= queryObj.code;\n     }\n     if (queryObj.name) {            \n      name=queryObj.name;\n     }\n     if (queryObj.departments) {            \n      departments=queryObj.departments;\n     }\n     //let hrmsResponse = await getEmployeeDetails(request.body.RequestInfo, queryObj.tenantId);   \n     let hrmsResponse = await getEmployeeDetails(request.body.RequestInfo, queryObj.tenantId,code,name,departments);   \n     let hrmsEmployee=hrmsResponse.Employees;\n     /*\n     if (queryObj.code) {\n      hrmsEmployee=filter(hrmsEmployee,function(x){return x.code==queryObj.code;});  \n     }\n     if (queryObj.name) {      \n      hrmsEmployee=hrmsEmployee.filter(s => String(s.user.name).toUpperCase().includes(String(queryObj.name).toUpperCase()));\n     }\n     */\n\n     \n     logger.debug(hrmsEmployee);         \n\n     let modifiedQueryDobNum = adjust530(queryObj.dob);\n     \n     /*let modifiedQueryDob = new Date(Number(queryObj.dob));\n     modifiedQueryDob.setHours(modifiedQueryDob.getHours() + 5);\n     modifiedQueryDob.setMinutes(modifiedQueryDob.getMinutes() + 30);\n     let modifiedQueryDobNum = Number(modifiedQueryDob);*/\n\n     if (queryObj.dob) {\n      //hrmsEmployee=filter(hrmsEmployee,function(x){return x.user.dob==queryObj.dob;}); \n      hrmsEmployee=filter(hrmsEmployee,function(x){\n        \n        \n        if(x!=null && x.user!=null && x.user.dob!=null){\n          return x.user.dob==modifiedQueryDobNum;\n        } else{\n          return false;}\n      }); \n     }\n     \n     \n     //let maxRetirementAge=envVariables.EGOV_PENSION_MAX_RETIREMENT_AGE;\n\n     if(hrmsEmployee){\n      for (var i = 0; i < hrmsEmployee.length; i++) {        \n        let dob=hrmsEmployee[i].user.dob;\n        //let actualDob=new Date(epochToYmd(intConversion(dob))); \n        //let dorYYYYMMDD=`${actualDob.getFullYear()+maxRetirementAge}-${actualDob.getMonth()+1}-${actualDob.getDate()}`;    \n        //let dateOfRetirement=convertDateToEpoch(dorYYYYMMDD,\"dob\");\n        let dateOfSuperannuation=hrmsEmployee[i].dateOfSuperannuation;\n\n        let employee={\n          pensionEmployeeId: \"\",\n          id: hrmsEmployee[i].id,\n          tenantId: hrmsEmployee[i].tenantId,\n          code: hrmsEmployee[i].code,\n          name: hrmsEmployee[i].user.name,\n          dob: dob,          \n          dateOfJoining: hrmsEmployee[i].dateOfAppointment,\n          dateOfRetirement: dateOfSuperannuation,\n          dateOfDeath: null,\n          department: hrmsEmployee[i].assignments[hrmsEmployee[i].assignments.length-1].department,\n          designation: hrmsEmployee[i].assignments[hrmsEmployee[i].assignments.length-1].designation\n        };\n\n        pensionEmployees.push(employee);\n      }\n     }\n\n      \n     response.Employees=pensionEmployees;      \n     res.json(response);\n       \n    })\n  );\n  return api;\n};\n"]}