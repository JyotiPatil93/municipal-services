{"version":3,"sources":["../../src/api/initiateReComputation.js"],"names":["asyncHandler","require","config","db","api","post","res","next","body","payloads","message","tenantId","ProcessInstances","businessService","closedApplicationNumber","closedWorkflow","businessId","action","nextState","RequestInfo","closedApplicationResponse","closedWorkflowHeaderId","workflowHeaderId","pensionEmployeeId","employee","workflowResponse","state","workflowHeader","topic","envVariables","KAFKA_TOPICS_INITIATE_RECOMPUTATION","push","messages","JSON","stringify","producer","send","err","data","response","ResponseInfo","json"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAGA;;;;;;AAFA,IAAMA,eAAeC,QAAQ,uBAAR,CAArB;;kBAIe,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,yBADF,EAEEL;AAAA,yFAAa,wBAAiBM,GAAjB,EAAsBC,IAAtB;AAAA,UAASC,IAAT,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,sBADO,GACI,EADJ;AAGLC,qBAHK,GAGG,uBAHH;AAKPC,sBALO,GAKEH,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBD,QAL3B;AAMPE,6BANO,GAMSL,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBC,eANlC;AAOPC,qCAPO,GAOiBN,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBG,cAAzB,CAAwCC,UAPzD;AAQPC,oBARO,GAQAT,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBK,MARzB;AASPC,uBATO,GASG,EATH;AAAA;AAAA,qBAWyB,oCAAwBV,KAAKW,WAA7B,EAAyCR,QAAzC,EAAkDE,eAAlD,EAAkEC,uBAAlE,CAXzB;;AAAA;AAWPM,uCAXO;AAYPC,oCAZO,GAYgBD,0BAA0BR,gBAA1B,CAA2C,CAA3C,EAA8CU,gBAZ9D;AAaPC,+BAbO,GAaWH,0BAA0BR,gBAA1B,CAA2C,CAA3C,EAA8CW,iBAbzD;;AAcXf,mBAAKI,gBAAL,CAAsB,CAAtB,EAAyBG,cAAzB,CAAwCO,gBAAxC,GAAyDD,sBAAzD;AACIG,sBAfO,GAeE;AACXD,mCAAmBA;AADR,eAfF;;AAkBXf,mBAAKI,gBAAL,CAAsB,CAAtB,EAAyBY,QAAzB,GAAkCA,QAAlC;;AAlBW;AAAA,qBAoBE,yDAA4ChB,IAA5C,CApBF;;AAAA;AAoBXA,kBApBW;AAAA;AAAA,qBAuBgB,2BAAeA,IAAf,CAvBhB;;AAAA;AAuBPiB,8BAvBO;;AAwBXP,0BAAUO,iBAAiBb,gBAAjB,CAAkC,CAAlC,EAAqCc,KAArC,CAA2CA,KAArD;AACAlB,mBAAKI,gBAAL,CAAsB,CAAtB,EAAyBe,cAAzB,CAAwCD,KAAxC,GAA8CR,SAA9C;;AAIIU,mBA7BO,GA6BDC,uBAAaC,mCA7BZ;;;AA+BXrB,uBAASsB,IAAT,CAAc;AACZH,uBAAOA,KADK;AAEZI,0BAAUC,KAAKC,SAAL,CAAe1B,IAAf;AAFE,eAAd;AAIA2B,iCAASC,IAAT,CAAc3B,QAAd,EAAwB,UAAS4B,GAAT,EAAcC,IAAd,EAAoB;AAC1C,oBAAIC,WAAW;AACbC,gCAAc,sCAA0BhC,KAAKW,WAA/B,EAA4C,IAA5C,CADD;AAEbP,oCAAkBJ,KAAKI;AAFV,iBAAf;AAIAN,oBAAImC,IAAJ,CAASF,QAAT;AACD,eAND;;AAnCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAFF;AAiDA,SAAOnC,GAAP;AACD,C","file":"initiateReComputation.js","sourcesContent":["import { Router } from \"express\";\r\nimport producer from \"../kafka/producer\";\r\nimport { requestInfoToResponseInfo, createWorkFlow ,searchClosedApplication} from \"../utils\";\r\nimport envVariables from \"../envVariables\";\r\nimport mdmsData from \"../utils/mdmsData\";\r\nimport { addUUIDAndAuditDetailsInitiateReComputation } from \"../utils/create\";\r\nimport { Message} from \"../utils/message\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport set from \"lodash/set\";\r\nimport get from \"lodash/get\";\r\nimport filter from \"lodash/filter\";\r\nimport { intConversion} from \"../utils/search\";\r\nconst asyncHandler = require(\"express-async-handler\");\r\n\r\nimport logger from \"../config/logger\";\r\n\r\nexport default ({ config, db }) => {\r\n  let api = Router();\r\n  api.post(\r\n    \"/_initiateReComputation\",\r\n    asyncHandler(async ({ body }, res, next) => {\r\n      let payloads = [];\r\n      \r\n      const message=Message();\r\n                 \r\n      let tenantId=body.ProcessInstances[0].tenantId;  \r\n      let businessService=body.ProcessInstances[0].businessService;\r\n      let closedApplicationNumber=body.ProcessInstances[0].closedWorkflow.businessId;\r\n      let action=body.ProcessInstances[0].action;    \r\n      let nextState=\"\";    \r\n                   \r\n      let closedApplicationResponse=await searchClosedApplication(body.RequestInfo,tenantId,businessService,closedApplicationNumber);\r\n      let closedWorkflowHeaderId=closedApplicationResponse.ProcessInstances[0].workflowHeaderId;\r\n      let pensionEmployeeId=closedApplicationResponse.ProcessInstances[0].pensionEmployeeId;\r\n      body.ProcessInstances[0].closedWorkflow.workflowHeaderId=closedWorkflowHeaderId;\r\n      let employee={\r\n        pensionEmployeeId: pensionEmployeeId\r\n      };\r\n      body.ProcessInstances[0].employee=employee;\r\n    \r\n      body = await addUUIDAndAuditDetailsInitiateReComputation(body);      \r\n      \r\n      \r\n      let workflowResponse=await createWorkFlow(body);\r\n      nextState=workflowResponse.ProcessInstances[0].state.state;              \r\n      body.ProcessInstances[0].workflowHeader.state=nextState;  \r\n      \r\n      \r\n            \r\n      let topic=envVariables.KAFKA_TOPICS_INITIATE_RECOMPUTATION;      \r\n    \r\n      payloads.push({\r\n        topic: topic,\r\n        messages: JSON.stringify(body)\r\n      });\r\n      producer.send(payloads, function(err, data) {\r\n        let response = {\r\n          ResponseInfo: requestInfoToResponseInfo(body.RequestInfo, true),\r\n          ProcessInstances: body.ProcessInstances\r\n        };\r\n        res.json(response);\r\n      });\r\n      \r\n\r\n        \r\n    })\r\n  );\r\n  return api;\r\n};\r\n"]}