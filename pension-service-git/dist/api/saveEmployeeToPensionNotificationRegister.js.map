{"version":3,"sources":["../../src/api/saveEmployeeToPensionNotificationRegister.js"],"names":["asyncHandler","require","config","db","api","post","res","next","body","payloads","message","Employees","length","push","topic","envVariables","KAFKA_TOPICS_SAVE_EMPLOYEE_TO_PENSION_NOTIFICATION_REGISTER","messages","JSON","stringify","producer","send","err","data","response","ResponseInfo","RequestInfo","json"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AACA,IAAMA,eAAeC,QAAQ,uBAAR,CAArB;;kBAEe,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,6CADF,EAEEL;AAAA,yFAAa,wBAAiBM,GAAjB,EAAsBC,IAAtB;AAAA,UAASC,IAAT,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,sBADO,GACI,EADJ;AAGLC,qBAHK,GAGG,uBAHH;;AAKX;;AAEA,kBAAGF,KAAKG,SAAL,CAAeC,MAAf,GAAsB,CAAzB,EAA2B;AACzB;;AAED;;AAEDH,uBAASI,IAAT,CAAc;AACZC,uBAAOC,uBAAaC,2DADR;AAEZC,0BAAUC,KAAKC,SAAL,CAAeX,IAAf;AAFE,eAAd;AAIAY,iCAASC,IAAT,CAAcZ,QAAd,EAAwB,UAASa,GAAT,EAAcC,IAAd,EAAoB;AAC1C,oBAAIC,WAAW;AACbC,gCAAc,sCAA0BjB,KAAKkB,WAA/B,EAA4C,IAA5C,CADD;AAEbf,6BAAWH,KAAKG;AAFH,iBAAf;AAIAL,oBAAIqB,IAAJ,CAASH,QAAT;AACD,eAND;;AAhBW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAFF;AA2BA,SAAOpB,GAAP;AACD,C","file":"saveEmployeeToPensionNotificationRegister.js","sourcesContent":["import { Router } from \"express\";\nimport producer from \"../kafka/producer\";\nimport { requestInfoToResponseInfo, createUserEventToUser,createUserEventToRole} from \"../utils\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport { Message} from \"../utils/message\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nconst asyncHandler = require(\"express-async-handler\");\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_saveEmployeeToPensionNotificationRegister\",\n    asyncHandler(async ({ body }, res, next) => {\n      let payloads = [];\n            \n      const message=Message();\n\n      //let userEventToUserResponse=await createUserEventToUser(body,body.Employees[0].tenantId,message.EMPLOYEE_PUSHED_TO_PNR_USER_EVENT_NAME,message.EMPLOYEE_PUSHED_TO_PNR_USER_EVENT_DESCRIPTION,body.Employees[0].uuid); \n      \n      if(body.Employees.length>0){\n        //let userEventToRoleResponse=await createUserEventToRole(body,body.Employees[0].tenantId,message.PNR_GENERATED_USER_EVENT_NAME,message.PNR_GENERATED_USER_EVENT_DESCRIPTION,envVariables.EGOV_MONTHLY_PNR_GENERATED_USER_EVENT_ROLE); \n        \n      }\n     \n      payloads.push({\n        topic: envVariables.KAFKA_TOPICS_SAVE_EMPLOYEE_TO_PENSION_NOTIFICATION_REGISTER,\n        messages: JSON.stringify(body)\n      });\n      producer.send(payloads, function(err, data) {       \n        let response = {\n          ResponseInfo: requestInfoToResponseInfo(body.RequestInfo, true),\n          Employees: body.Employees\n        };\n        res.json(response);\n      });\n    })\n  );\n  return api;\n};\n"]}