{"version":3,"sources":["../../src/api/searchPensionNotificationRegister.js"],"names":["asyncHandler","require","config","db","api","post","request","res","next","response","ResponseInfo","body","RequestInfo","Employees","queryObj","JSON","parse","stringify","query","errors","length","errorType","errorReponse","Errors","code","name","departments","tenantId","hrmsResponse","hrmsEmployee","text","String","toUpperCase","dob","modifiedQueryDobNum","endDate","Number","sqlQuery","pensionEmployees","employees","err","dbRes","logger","error","stack","rows","i","employeeFilter","x","department","assignments","designation","push","json"],"mappings":"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","file":"searchPensionNotificationRegister.js","sourcesContent":["import { Router } from \"express\";\nimport { requestInfoToResponseInfo,getEmployeeDetails,adjust530 } from \"../utils\";\nimport { mergeSearchResults,intConversion } from \"../utils/search\";\nimport isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport some from \"lodash/some\";\nimport { actions } from \"../utils/search\";\nimport { validatePensionNotificationRegisterSearchModel } from \"../utils/modelValidation\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport filter from \"lodash/filter\";\nconst asyncHandler = require(\"express-async-handler\");\n\nimport logger from \"../config/logger\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_searchPensionNotificationRegister\",\n    asyncHandler(async (request, res, next) => {     \n      \n      let response = {\n        ResponseInfo: requestInfoToResponseInfo(request.body.RequestInfo, true),\n        Employees: []\n      };\n\n      const queryObj = JSON.parse(JSON.stringify(request.query));\n      \n\n      //getting mdms data\n      //let mdms = await mdmsData(request.body.RequestInfo, queryObj.tenantId);\n      \n      \n      let errors = validatePensionNotificationRegisterSearchModel(queryObj);\n      if (errors.length > 0) {\n        next({\n          errorType: \"custom\",\n          errorReponse: {\n            ResponseInfo: requestInfoToResponseInfo(\n              request.body.RequestInfo,\n              true\n            ),\n            Errors: errors\n          }\n        });\n        return;\n      }\n      \n      \n     let code=\"\";\n     let name=\"\";\n     let departments=\"\";\n     \n     if (queryObj.code) {\n      code= queryObj.code;\n     }\n    //  if (queryObj.name) {            \n    //   name=queryObj.name;\n    //  }\n     if (queryObj.departments) {            \n      departments=queryObj.departments;\n     }\n     //let hrmsResponse = await getEmployeeDetails(request.body.RequestInfo, queryObj.tenantId);   \n     let hrmsResponse = await getEmployeeDetails(request.body.RequestInfo, queryObj.tenantId,code,name,departments);   \n     let hrmsEmployee=hrmsResponse.Employees;\n\n      let text =\"select pnr.uuid as pension_notification_register_id, pe.uuid as pension_employee_id, pe.employee_hrms_id, pe.employee_hrms_code, pe.name, pe.date_of_birth, pe.date_of_retirement, pe.tenantid, pe.gender, pe.employee_status, pe.employee_type, pe.date_of_appointment from eg_pension_employee pe join eg_pension_notification_register pnr on pe.uuid=pnr.pension_employee_id where pnr.active =true and (pnr.is_initiated is null or pnr.is_initiated =false)\";\n               \n      if (queryObj.tenantId) {\n        text = `${text} and pe.tenantid = '${queryObj.tenantId}'`;\n      }\n      if (queryObj.code) {\n        text = `${text} and pe.employee_hrms_code = '${queryObj.code}'`;\n      }\n      if (queryObj.name) {\n        text = `${text} and upper(pe.name) like '%${String(queryObj.name).toUpperCase()}%'`;\n      }\n      if (queryObj.dob) {\n        let modifiedQueryDobNum = adjust530(queryObj.dob);\n          //text = `${text} and pe.date_of_birth = ${queryObj.dob}`;\n          text = `${text} and pe.date_of_birth = ${modifiedQueryDobNum}`;\n      }\n      if(queryObj.endDate){\n        /*\n        let today=new Date();\n        let startDate=`${today.getFullYear()}-${today.getMonth()+1}-${today.getDate()}`;  \n        logger.debug(startDate);      \n        let epochStartDate=Number(convertDateToEpoch(startDate,\"dob\"));        \n        let epochEndDate=Number(convertDateToEpoch(queryObj.endDate,\"dob\"));        \n        text = `${text} and pe.date_of_retirement >=${epochStartDate} and pe.date_of_retirement <=${epochEndDate}`;\n        */\n        text = `${text} and pe.date_of_retirement <=${Number(queryObj.endDate)}`;\n      }\n     \n      let sqlQuery = text;\n      \n      \n\n      let pensionEmployees=[];\n      let employees=[];\n\n      db.query(sqlQuery, async (err, dbRes) => {\n        if (err) {\n          logger.error(err.stack);\n        } else {\n          \n          employees =\n            dbRes.rows && !isEmpty(dbRes.rows)\n              ? await mergeSearchResults(\n                  dbRes.rows,\n                  request.query,\n                  request.body.RequestInfo\n                )\n              : [];\n              \n          \n             for (var i = 0; i < employees.length; i++) {\n              let employeeFilter=filter(hrmsEmployee,function(x){return x.code==employees[i].code;});\n              //employee exist in hrms\n              if(employeeFilter.length>0){\n                employees[i].department=employeeFilter[0].assignments[employeeFilter[0].assignments.length-1].department;\n                employees[i].designation=employeeFilter[0].assignments[employeeFilter[0].assignments.length-1].designation;\n                pensionEmployees.push(employees[i]);\n              }\n              \n            }\n          //response.Employees=employees;\n          response.Employees=pensionEmployees;\n          res.json(response);\n        }\n      });\n       \n    })\n  );\n  return api;\n};\n"]}