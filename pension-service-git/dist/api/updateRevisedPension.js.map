{"version":3,"sources":["../../src/api/updateRevisedPension.js"],"names":["asyncHandler","require","config","db","api","post","res","next","body","payloads","processInstance","tenantId","ProcessInstances","pensioner","pensionRevision","lastPensionRevision","processInstances","push","RequestInfo","pensionerNumber","pensionRevisionResponse","pensionRevisionList","length","x","effectiveStartYear","effectiveStartMonth","logger","debug","JSON","stringify","topic","envVariables","KAFKA_TOPICS_UPDATE_REVISED_PENSION","messages","producer","send","err","data","response","ResponseInfo","json"],"mappings":"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","file":"updateRevisedPension.js","sourcesContent":["import { Router } from \"express\";\nimport producer from \"../kafka/producer\";\nimport { requestInfoToResponseInfo,searchPensionerForPensionRevision} from \"../utils\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport { addUUIDAndAuditDetailsUpdateRevisedPension,addUUIDAndAuditDetailsCloseLastRevisedPension } from \"../utils/create\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nimport filter from \"lodash/filter\";\nimport orderBy from \"lodash/orderBy\";\nconst asyncHandler = require(\"express-async-handler\");\n\nimport logger from \"../config/logger\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_updateRevisedPension\",\n    asyncHandler(async ({ body }, res, next) => {\n      let payloads = [];\n      \n      let processInstance={\n        tenantId: body.ProcessInstances[0].tenantId,     \n        pensioner: body.ProcessInstances[0].pensioner,   \n        pensionRevision: body.ProcessInstances[0].pensionRevision,   \n        lastPensionRevision: []     \n      };  \n\n      let processInstances=[];\n      processInstances.push(processInstance);\n      body.ProcessInstances=processInstances;\n\n      let pensionRevisionResponse = await searchPensionerForPensionRevision(body.RequestInfo,body.ProcessInstances[0].tenantId,body.ProcessInstances[0].pensioner.pensionerNumber); \n      let pensionRevisionList=pensionRevisionResponse.ProcessInstances[0].pensionRevision;\n      //pensionRevisionList=filter(pensionRevisionList,function(x){return x.effectiveEndYear!=null && x.effectiveEndMonth!=null;})\n      if(pensionRevisionList.length>1){\n        pensionRevisionList=filter(pensionRevisionList,function(x){return x.effectiveStartYear<body.ProcessInstances[0].pensionRevision[0].effectiveStartYear ||(x.effectiveStartYear==body.ProcessInstances[0].pensionRevision[0].effectiveStartYear && x.effectiveStartMonth<body.ProcessInstances[0].pensionRevision[0].effectiveStartMonth);});\n        if(pensionRevisionList.length>1){\n          pensionRevisionList=orderBy(pensionRevisionList,['effectiveStartYear','effectiveStartMonth'],['desc']);        \n        }                \n      }\n \n      if(pensionRevisionList && pensionRevisionList.length>1){\n        let lastPensionRevision=[];\n        lastPensionRevision.push(pensionRevisionList[0]);        \n        logger.debug(\"lastPensionRevision\", JSON.stringify(lastPensionRevision));\n\n        body.ProcessInstances[0].lastPensionRevision=lastPensionRevision;       \n        body = await addUUIDAndAuditDetailsCloseLastRevisedPension(body);\n      }\n\n      body = await addUUIDAndAuditDetailsUpdateRevisedPension(body);\n      \n      \n      payloads.push({\n        topic: envVariables.KAFKA_TOPICS_UPDATE_REVISED_PENSION, \n        messages: JSON.stringify(body)\n      });\n      producer.send(payloads, function(err, data) {\n        let response = {\n          ResponseInfo: requestInfoToResponseInfo(body.RequestInfo, true),\n          ProcessInstances: body.ProcessInstances\n        };\n        res.json(response);\n      });\n    })\n  );\n  return api;\n};\n"]}