{"version":3,"sources":["../../src/api/closeWorkflowByUser.js"],"names":["asyncHandler","require","config","db","api","post","res","next","body","payloads","topic","RequestInfo","ProcessInstances","tenantId","businessId","workflowSearchResponse","logger","debug","JSON","stringify","businessService","envVariables","EGOV_PENSION_RRP_BUSINESS_SERVICE","EGOV_PENSION_DOE_BUSINESS_SERVICE","EGOV_PENSION_DOP_BUSINESS_SERVICE","KAFKA_TOPICS_SAVE_CLOSED","push","messages","producer","send","err","data","response","ResponseInfo","json"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;AADA,IAAMA,eAAeC,QAAQ,uBAAR,CAArB;;kBAGe,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,uBADF,EAEEL;AAAA,yFAAa,wBAAiBM,GAAjB,EAAsBC,IAAtB;AAAA,UAASC,IAAT,SAASA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,sBADO,GACI,EADJ;AAKPC,mBALO,GAKD,EALC;AAAA;AAAA,qBAMwB,kCAAsBF,KAAKG,WAA3B,EAAwCH,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBC,QAAjE,EAA0EL,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBE,UAAnG,CANxB;;AAAA;AAMPC,oCANO;;AAOXC,+BAAOC,KAAP,CAAa,wBAAb,EAAuCC,KAAKC,SAAL,CAAeJ,sBAAf,CAAvC;AACA;AACIK,6BATO,GASSZ,KAAKI,gBAAL,CAAsB,CAAtB,EAAyBQ,eATlC;AAAA;AAAA,qBAWE,iDAAoCZ,IAApC,EAAyCO,sBAAzC,CAXF;;AAAA;AAWXP,kBAXW;AAAA,4BAaJY,eAbI;AAAA,8CAcJC,uBAAaC,iCAdT,wBAiBJD,uBAAaE,iCAjBT,wBAoBJF,uBAAaG,iCApBT;AAAA;;AAAA;AAePd,sBAAOW,uBAAaI,wBAApB;AAfO;;AAAA;AAkBPf,sBAAOW,uBAAaI,wBAApB;AAlBO;;AAAA;AAqBPf,sBAAOW,uBAAaI,wBAApB;AArBO;;AAAA;;AA2BXhB,uBAASiB,IAAT,CAAc;AACZhB,uBAAOA,KADK;AAEZiB,0BAAUT,KAAKC,SAAL,CAAeX,IAAf;AAFE,eAAd;AAIAoB,iCAASC,IAAT,CAAcpB,QAAd,EAAwB,UAASqB,GAAT,EAAcC,IAAd,EAAoB;AAC1C,oBAAIC,WAAW;AACbC,gCAAc,sCAA0BzB,KAAKG,WAA/B,EAA4C,IAA5C,CADD;AAEbC,oCAAkBJ,KAAKI;AAFV,iBAAf;AAIAN,oBAAI4B,IAAJ,CAASF,QAAT;AACD,eAND;;AA/BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAFF;AA6CA,SAAO5B,GAAP;AACD,C","file":"closeWorkflowByUser.js","sourcesContent":["import { Router } from \"express\";\nimport producer from \"../kafka/producer\";\nimport { requestInfoToResponseInfo, searchPensionWorkflow} from \"../utils\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport { addUUIDAndAuditDetailsCloseWorkflow } from \"../utils/create\";\nimport isEmpty from \"lodash/isEmpty\";\nimport set from \"lodash/set\";\nimport get from \"lodash/get\";\nimport { intConversion} from \"../utils/search\";\nconst asyncHandler = require(\"express-async-handler\");\nimport logger from \"../config/logger\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_closeWorkflowByUser\",\n    asyncHandler(async ({ body }, res, next) => {\n      let payloads = [];\n    \n\n               \n      let topic=\"\";\n      let workflowSearchResponse = await searchPensionWorkflow(body.RequestInfo, body.ProcessInstances[0].tenantId,body.ProcessInstances[0].businessId);      \n      logger.debug(\"workflowSearchResponse\", JSON.stringify(workflowSearchResponse));\n      //currentState=workflowSearchResponse.ProcessInstances[0].state.state;     \n      let businessService=body.ProcessInstances[0].businessService;\n      \n      body = await addUUIDAndAuditDetailsCloseWorkflow(body,workflowSearchResponse);             \n      \n      switch(businessService){    \n        case envVariables.EGOV_PENSION_RRP_BUSINESS_SERVICE:\n          topic= envVariables.KAFKA_TOPICS_SAVE_CLOSED;\n          break;\n        case envVariables.EGOV_PENSION_DOE_BUSINESS_SERVICE:\n          topic= envVariables.KAFKA_TOPICS_SAVE_CLOSED;\n          break;\n        case envVariables.EGOV_PENSION_DOP_BUSINESS_SERVICE:\n          topic= envVariables.KAFKA_TOPICS_SAVE_CLOSED;\n          break;\n      }\n      \n        \n\n      payloads.push({\n        topic: topic,\n        messages: JSON.stringify(body)\n      });\n      producer.send(payloads, function(err, data) {\n        let response = {\n          ResponseInfo: requestInfoToResponseInfo(body.RequestInfo, true),\n          ProcessInstances: body.ProcessInstances\n        };\n        res.json(response);\n      });\n      \n\n        \n    })\n  );\n  return api;\n};\n"]}