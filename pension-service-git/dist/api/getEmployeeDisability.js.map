{"version":3,"sources":["../../src/api/getEmployeeDisability.js"],"names":["asyncHandler","require","config","db","api","post","request","res","next","response","ResponseInfo","body","RequestInfo","Employees","queryObj","JSON","parse","stringify","query","text","tenantId","String","toUpperCase","code","sqlQuery","employees","err","dbRes","logger","error","stack","rows","json"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAFA,IAAMA,eAAeC,QAAQ,uBAAR,CAArB;;kBAIe,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;AACAA,MAAIC,IAAJ,CACE,yBADF,EAEEL;AAAA,yFAAa,kBAAOM,OAAP,EAAgBC,GAAhB,EAAqBC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPC,sBAFO,GAEI;AACbC,8BAAc,sCAA0BJ,QAAQK,IAAR,CAAaC,WAAvC,EAAoD,IAApD,CADD;AAEbC,2BAAW;AAFE,eAFJ;AAOLC,sBAPK,GAOMC,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeX,QAAQY,KAAvB,CAAX,CAPN;AAWPC,kBAXO,GAWD,+TAXC;;;AAaX,kBAAIL,SAASM,QAAb,EAAuB;AACrBD,uBAAUA,IAAV,mCAA4CE,OAAOP,SAASM,QAAhB,EAA0BE,WAA1B,EAA5C;AACD;AACD,kBAAIR,SAASS,IAAb,EAAmB;AACjBJ,uBAAUA,IAAV,6CAAsDE,OAAOP,SAASS,IAAhB,EAAsBD,WAAtB,EAAtD;AACD;;AAEGE,sBApBO,GAoBIL,IApBJ;AAwBPM,uBAxBO,GAwBG,EAxBH;;;AA0BXtB,iBAAGe,KAAH,CAASM,QAAT;AAAA,qGAAmB,iBAAOE,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,+BACbD,GADa;AAAA;AAAA;AAAA;;AAEfE,2CAAOC,KAAP,CAAaH,IAAII,KAAjB;AAFe;AAAA;;AAAA;AAAA,gCAMbH,MAAMI,IAAN,IAAc,CAAC,uBAAQJ,MAAMI,IAAd,CANF;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAOH,4CACJJ,MAAMI,IADF,EAEJzB,QAAQY,KAFJ,EAGJZ,QAAQK,IAAR,CAAaC,WAHT,CAPG;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,wCAYT,EAZS;;AAAA;AAKfa,mCALe;;;AAefhB,mCAASI,SAAT,GAAmBY,SAAnB;AACAlB,8BAAIyB,IAAJ,CAASvB,QAAT;;AAhBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAnB;;AAAA;AAAA;AAAA;AAAA;;AA1BW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAFF;AAkDA,SAAOL,GAAP;AACD,C","file":"getEmployeeDisability.js","sourcesContent":["import { Router } from \"express\";\nimport { requestInfoToResponseInfo} from \"../utils\";\nimport { mergeEmployeeDisabilityResults } from \"../utils/search\";\nimport isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport some from \"lodash/some\";\nimport { actions } from \"../utils/search\";\nimport envVariables from \"../envVariables\";\nimport mdmsData from \"../utils/mdmsData\";\nimport filter from \"lodash/filter\";\nconst asyncHandler = require(\"express-async-handler\");\n\nimport logger from \"../config/logger\";\n\nexport default ({ config, db }) => {\n  let api = Router();\n  api.post(\n    \"/_getEmployeeDisability\",\n    asyncHandler(async (request, res, next) => {     \n      \n      let response = {\n        ResponseInfo: requestInfoToResponseInfo(request.body.RequestInfo, true),\n        Employees: []\n      };\n\n      const queryObj = JSON.parse(JSON.stringify(request.query));\n      \n      \n\n      let text =\"SELECT dr.tenantid, dr.severity_of_disability, dr.disability_percentage, dr.date_of_injury, dr.injury_application_date, dr.wound_extraordinary_pension, dr.attendant_allowance_granted, dr.comments FROM eg_pension_disability_register dr JOIN eg_pension_employee pe ON dr.pension_employee_id=pe.uuid WHERE dr.active=true\";\n               \n      if (queryObj.tenantId) {\n        text = `${text} and upper(dr.tenantid) = '${String(queryObj.tenantId).toUpperCase()}'`;\n      }\n      if (queryObj.code) {\n        text = `${text} and upper(pe.employee_hrms_code) = '${String(queryObj.code).toUpperCase()}'`;\n      }          \n     \n      let sqlQuery = text;\n      \n      \n\n      let employees=[];\n\n      db.query(sqlQuery, async (err, dbRes) => {\n        if (err) {\n          logger.error(err.stack);\n        } else {\n          \n          employees =\n            dbRes.rows && !isEmpty(dbRes.rows)\n              ? await mergeEmployeeDisabilityResults(\n                  dbRes.rows,\n                  request.query,\n                  request.body.RequestInfo\n                )\n              : [];\n              \n              \n          response.Employees=employees;\n          res.json(response);\n        }\n      });\n       \n    })\n  );\n  return api;\n};\n"]}