{"version":3,"sources":["../../src/utils/calculationHelper.js"],"names":["getYearOfService","employee","yearsOfService","getNQSYear","getHalfYearOfService","halfYearsOfService","nqsMonth","getNQSMonth","nqsYear","nqs","getNQS","Number","split","nqsMonths","getNQSDay","nqsDay","gqs","getGQS","gqsDays","gqsMonths","gqsYears","days","months","years","totalNoPayLeavesDays","totalNoPayLeavesMonths","totalNoPayLeavesYears","serviceHistory","dtStart","Date","serviceFrom","getFullYear","getMonth","getDate","dtEnd","serviceTo","dateOfRetirement","reasonForRetirement","dateOfDeath","monthsDaysInRange","getMonthsDaysInRange","getGQSYear","getGQSMonth","getGQSDay","startDate","endDate","tempMonth","tempYear","Months","Days","isDateLastDayOfMonth","monthDays","date","lastDayOfMonth","month","year","getDAPercentage","effectiveDate","mdms","value","mdmsDAPercentage","daPercentageList","x","length","getCommutationPercentage","mdmsCommutationPercentage","commutationPercentageList","getCommutationMultiplier","age","getAgeOnRetirementDate","dob","ageOnNextBirthDay","mdmsCommutationMultiplier","commutationMultiplierList","getIRPercentage","mdmsIRPercentage","irPercentageList","getAdditionalPensionPercentage","mdmsAdditionalPensionPercentage","additionalPensionPercentageList","fromAge","toAge","getAdditionalPensionPercentageAfterRetirement","dateOfBirth","Math","trunc","getYearDifference","getPensionConfigurationValue","key","mdmsConfigurations","configurationsList","getDOJ","doj","getAge","currentDateTime","today","currentYearDOB","dobOnRetirementYear","dtPreviousDate","dtNextDate","pMonths","nMonths","diffYear","isEldestDependent","dependent","dependents","dependentAge","eligibleDependents","relationship","isEligibleForGratuity","i","eldestGratuityEligibleDependent","name","getAdditionalPensionPercentageForFamily","pensionEligibleDependents","isEligibleForPension"],"mappings":"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","file":"calculationHelper.js","sourcesContent":["import uniqBy from \"lodash/uniqBy\";\r\nimport uniq from \"lodash/uniq\";\r\nimport get from \"lodash/get\";\r\nimport filter from \"lodash/filter\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport lte from \"lodash/lte\";\r\nimport gte from \"lodash/gte\";\r\nimport orderBy from \"lodash/orderBy\";\r\nimport { httpRequest, httpGetRequest } from \"./api\";\r\nimport envVariables from \"../envVariables\";\r\nimport { from } from \"linq\";\r\n//const math=require(\"mathjs\");\r\n//var DateDiff=require(\"date-diff\")\r\n\r\nimport logger from \"../config/logger\";\r\n\r\nexport const getYearOfService = (employee) => { \r\n    let yearsOfService=getNQSYear(employee);     \r\n    return yearsOfService;\r\n};\r\n\r\nexport const getHalfYearOfService = (employee) => { \r\n  let halfYearsOfService=getNQSYear(employee)*2;\r\n  let nqsMonth=getNQSMonth(employee);\r\n  if(nqsMonth>=3){\r\n    halfYearsOfService +=1;\r\n  };\r\n    \r\n  return halfYearsOfService;\r\n};\r\n\r\nexport const getNQSYear = (employee) => { \r\n  let nqsYear=0;\r\n  \r\n  let nqs=getNQS(employee);\r\n  if(nqs){\r\n    nqsYear=Number(nqs.split(\"|\")[0]);\r\n  }\r\n  \r\n  return nqsYear;\r\n};\r\n\r\nexport const getNQSMonth = (employee) => { \r\n  let nqsMonths=0;\r\n  \r\n  let nqs=getNQS(employee);\r\n  if(nqs){\r\n    nqsMonths=Number(nqs.split(\"|\")[1]);\r\n  }\r\n  \r\n  return nqsMonths;\r\n};\r\n\r\nexport const getNQSDay = (employee) => { \r\n  let nqsDay=0;\r\n  \r\n  let nqs=getNQS(employee);\r\n  if(nqs){\r\n    nqsDay=Number(nqs.split(\"|\")[2]);\r\n  }\r\n  \r\n  return nqsDay;\r\n};\r\n\r\n//Net Qualifying Service as Years|Months|Days\r\nexport const getNQS = (employee) => { \r\n  let nqs=\"\";\r\n \r\n  let gqs=getGQS(employee);\r\n  let gqsDays=Number(gqs.split(\"|\")[2]);\r\n  let gqsMonths=Number(gqs.split(\"|\")[1]);\r\n  let gqsYears=Number(gqs.split(\"|\")[0]);\r\n  let days=gqsDays;\r\n  let months=gqsMonths;\r\n  let years=gqsYears;\r\n    \r\n  let totalNoPayLeavesDays=employee.totalNoPayLeavesDays?Number(employee.totalNoPayLeavesDays):0;\r\n  let totalNoPayLeavesMonths=employee.totalNoPayLeavesMonths?Number(employee.totalNoPayLeavesMonths):0;\r\n  let totalNoPayLeavesYears=employee.totalNoPayLeavesYears?Number(employee.totalNoPayLeavesYears):0;\r\n\r\n  if(days>=totalNoPayLeavesDays){\r\n    days=days-totalNoPayLeavesDays;\r\n  }\r\n  else{\r\n    if(months>0){      \r\n      days=days+30-totalNoPayLeavesDays;      \r\n      months=months-1;\r\n    }\r\n    else{\r\n      years=years-1;\r\n      months=months+12;\r\n      days=days+30-totalNoPayLeavesDays; \r\n      months=months-1;\r\n    }\r\n  }\r\n  if(months>=totalNoPayLeavesMonths){\r\n    months=months-totalNoPayLeavesMonths;\r\n  }\r\n  else{   \r\n    months=months+12-totalNoPayLeavesMonths;\r\n    years=years-1;\r\n  }\r\n  years=years-totalNoPayLeavesYears;\r\n  \r\n  /*\r\n  let totalNoPayLeaves=employee.totalNoPayLeaves?Number(employee.totalNoPayLeaves):0;\r\n  let serviceHistory=employee.serviceHistory[0];\r\n  let dtStart=new Date(serviceHistory.serviceFrom) ;\r\n  let dtEnd=new Date(serviceHistory.serviceTo?serviceHistory.serviceTo:employee.dateOfRetirement);   \r\n  let dtActualEnd=new Date(dtEnd.getFullYear(),dtEnd.getMonth(),dtEnd.getDate()-totalNoPayLeaves);\r\n  logger.debug(dtActualEnd);\r\n  //let dtActualEnd=new Date(dtEnd - totalNoPayLeaves *86400000);\r\n  let monthsDaysInRange=getMonthsDaysInRange(dtStart,dtActualEnd);\r\n  months = Number(monthsDaysInRange.split(\"|\")[0]);\r\n  days = Number(monthsDaysInRange.split(\"|\")[1]);      \r\n  if(days>=30){\r\n      months+=1;\r\n      days-=30;\r\n  }\r\n  */\r\n\r\n  //years=Math.trunc(months/12) ;\r\n  //months -=(years*12);\r\n  nqs=`${years}|${months}|${days}`;\r\n  \r\n  return nqs;\r\n};\r\n\r\n//Gross Qualifying Service as Years|Months|Days\r\nexport const getGQS = (employee) => { \r\n  let gqs=\"\";\r\n  let years=0;\r\n  let months=0;\r\n  let days=0;  \r\n\r\n  let serviceHistory=employee.serviceHistory[0];\r\n  let dtStart=new Date(serviceHistory.serviceFrom) ;\r\n  dtStart=new Date(dtStart.getFullYear(),dtStart.getMonth(),dtStart.getDate()+1); \r\n  let dtEnd=new Date(serviceHistory.serviceTo?serviceHistory.serviceTo:employee.dateOfRetirement);  \r\n  switch(employee.reasonForRetirement) {\r\n    case \"DEATH_AS_EMPLOYEE\":\r\n      dtEnd=new Date(employee.dateOfDeath);\r\n      break;    \r\n  }      \r\n  let monthsDaysInRange=getMonthsDaysInRange(dtStart,dtEnd);\r\n  months = Number(monthsDaysInRange.split(\"|\")[0]);\r\n  days = Number(monthsDaysInRange.split(\"|\")[1]);    \r\n  /*\r\n  for (var i = 0; i < employee.serviceHistory.length; i++) { \r\n      let serviceHistory=employee.serviceHistory[i];\r\n      let dtStart=serviceHistory.serviceFrom;\r\n      let dtEnd=serviceHistory.serviceTo?serviceHistory.serviceTo:employee.dateOfRetirement;\r\n      let monthsDaysInRange=getMonthsDaysInRange(dtStart,dtEnd);\r\n      months += Number(monthsDaysInRange.split(\"|\")[0]);\r\n      days += Number(monthsDaysInRange.split(\"|\")[1]);\r\n      logger.debug(monthsDaysInRange);   \r\n  }  \r\n  */      \r\n  if(days>=30){\r\n      months+=1;\r\n      days-=30;\r\n  }\r\n  \r\n  //years=Math.trunc(months/12) ;\r\n  months -=(years*12);\r\n\r\n  gqs=`${years}|${months}|${days}`;\r\n  \r\n  return gqs;\r\n};\r\n\r\nexport const getGQSYear = (employee) => { \r\n  let gqsYears=0;\r\n  \r\n  let gqs=getGQS(employee);\r\n  if(gqs){\r\n    gqsYears=Number(gqs.split(\"|\")[0]);\r\n  }\r\n  \r\n  return gqsYears;\r\n};\r\n\r\nexport const getGQSMonth = (employee) => { \r\n  let gqsMonths=0;\r\n  \r\n  let gqs=getGQS(employee);\r\n  if(gqs){\r\n    gqsMonths=Number(gqs.split(\"|\")[1]);\r\n  }\r\n  \r\n  return gqsMonths;\r\n};\r\n\r\nexport const getGQSDay = (employee) => { \r\n  let gqsDays=0;\r\n  \r\n  let gqs=getGQS(employee);\r\n  if(gqs){\r\n    gqsDays=Number(gqs.split(\"|\")[2]);\r\n  }\r\n  \r\n  return gqsDays;\r\n};\r\n\r\nexport const getMonthsDaysInRange = (dtStart,dtEnd) => { \r\n  let startDate=new Date(dtStart);\r\n  let endDate=new Date(dtEnd);\r\n  let days = 0;\r\n  let months = 0;  \r\n  let tempMonth = 0;\r\n  let tempYear = 0;\r\n  let Months=0;\r\n  let Days=0;  \r\n  \r\n  if (startDate.getDate() == 1 && isDateLastDayOfMonth(endDate))\r\n  {\r\n      \r\n      Months = (endDate.getFullYear()*12+endDate.getMonth())-(startDate.getFullYear()*12+startDate.getMonth()-1);\r\n      Days = 0;\r\n  }\r\n  else\r\n  {      \r\n      if (endDate.getDate() < startDate.getDate())\r\n      {\r\n          days = (endDate.getDate() + 30 + 1) - startDate.getDate();\r\n          tempMonth = endDate.getMonth() - 1;\r\n\r\n          if (tempMonth < startDate.getMonth())\r\n          {\r\n              tempMonth = tempMonth + 12;\r\n              tempYear = endDate.getFullYear() - 1;\r\n              months += tempMonth - startDate.getMonth();\r\n              months += (tempYear - startDate.getFullYear()) * 12;\r\n          }\r\n          else\r\n          {\r\n              months += tempMonth - startDate.getMonth();\r\n              months += (endDate.getFullYear() - startDate.getFullYear()) * 12;\r\n          }                    \r\n      }\r\n      else\r\n      {\r\n          days = (endDate.getDate() + 1) - startDate.getDate();\r\n          tempMonth = endDate.getMonth();\r\n\r\n          if (tempMonth < startDate.getMonth())\r\n          {\r\n              tempMonth = tempMonth+ 12;\r\n              tempYear = endDate.getFullYear() - 1;\r\n              months += tempMonth - startDate.getMonth();\r\n              months += (tempYear - startDate.getFullYear()) * 12;\r\n          }\r\n          else\r\n          {\r\n              months += tempMonth - startDate.getMonth();\r\n              months += (endDate.getFullYear()  - startDate.getFullYear()) * 12;\r\n          }\r\n      }\r\n      \r\n      Months = months;\r\n      Days = days;      \r\n      /*\r\n      let LastDayofMonth = lastDayOfMonth(endDate.getMonth(), endDate.getFullYear());      \r\n      if (Days >= LastDayofMonth)\r\n      {\r\n          Months = Months +1;\r\n          Days = Days- LastDayofMonth;\r\n      } \r\n      */     \r\n  } \r\n\r\n  let monthDays=`${Months}|${Days}`;\r\n  \r\n  return monthDays;\r\n\r\n};\r\n\r\nexport const isDateLastDayOfMonth = (date) => {\r\n  let isDateLastDayOfMonth=false;\r\n  if(new Date(date).getDate()==lastDayOfMonth(new Date(date).getMonth()+1,new Date(date).getFullYear())){\r\n    isDateLastDayOfMonth=true;\r\n  }\r\n  return isDateLastDayOfMonth;\r\n};\r\n\r\nexport const lastDayOfMonth = (month,year) => {\r\n  let lastDayOfMonth=30;\r\n  switch (month)\r\n  {\r\n      case 1:\r\n      case 3:\r\n      case 5:\r\n      case 7:\r\n      case 8:\r\n      case 10:\r\n      case 12:\r\n        lastDayOfMonth = 31;\r\n          break;\r\n      case 4:\r\n      case 6:\r\n      case 9:\r\n      case 11:\r\n        lastDayOfMonth = 30;\r\n          break;\r\n      case 2:\r\n          if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0))\r\n          {\r\n            lastDayOfMonth = 29;\r\n          }\r\n          else\r\n          {\r\n            lastDayOfMonth = 28;\r\n          }\r\n          break;\r\n\r\n  }\r\n  return lastDayOfMonth;\r\n};\r\n\r\nexport const getDAPercentage = (effectiveDate,mdms) => { \r\n  let value=0;\r\n  const mdmsDAPercentage=get(mdms,\"MdmsRes.pension.DAPercentage\");  \r\n  //const mdmsDAPercentage=get(mdms,\"DAPercentage\");  \r\n  let daPercentageList=filter(mdmsDAPercentage,function(x){return gte(new Date(effectiveDate),new Date(x.startDate)) \r\n    && lte(new Date(effectiveDate),new Date(x.endDate)) && x.endDate!=null;});\r\n\r\n  if(daPercentageList && daPercentageList.length>0){\r\n    value=daPercentageList[0]? daPercentageList[0].value:0;\r\n  }\r\n  else{\r\n    daPercentageList=filter(mdmsDAPercentage,function(x){return gte(new Date(effectiveDate),new Date(x.startDate)) \r\n     && x.endDate==null;});\r\n\r\n    if(daPercentageList && daPercentageList.length>0){\r\n      value=daPercentageList[0]? daPercentageList[0].value:0;\r\n    }\r\n\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getCommutationPercentage = (employee,mdms) => { \r\n  let value=0;\r\n  const mdmsCommutationPercentage=get(mdms,\"MdmsRes.pension.CommutationPercentage\");  \r\n  //const mdmsCommutationPercentage=get(mdms,\"CommutationPercentage\");  \r\n  let commutationPercentageList=filter(mdmsCommutationPercentage,function(x){return gte(new Date(employee.dateOfRetirement),new Date(x.startDate)) \r\n    && lte(new Date(employee.dateOfRetirement),new Date(x.endDate)) && x.endDate!=null;});\r\n\r\n  if(commutationPercentageList && commutationPercentageList.length>0){\r\n    value=commutationPercentageList[0]? commutationPercentageList[0].value:0;\r\n  }\r\n  else{\r\n    commutationPercentageList=filter(mdmsCommutationPercentage,function(x){return gte(new Date(employee.dateOfRetirement),new Date(x.startDate)) \r\n      && x.endDate==null;});\r\n\r\n    if(commutationPercentageList && commutationPercentageList.length>0){\r\n      value=commutationPercentageList[0]? commutationPercentageList[0].value:0;\r\n    }\r\n\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getCommutationMultiplier = (employee,mdms) => { \r\n  let value=0;    \r\n  //let age=getAge(employee.dob);\r\n  let age=getAgeOnRetirementDate(employee.dob,employee.dateOfRetirement);\r\n  let ageOnNextBirthDay=age+1;  \r\n  \r\n  const mdmsCommutationMultiplier=get(mdms,\"MdmsRes.pension.CommutationMultiplier\");  \r\n  //const mdmsCommutationMultiplier=get(mdms,\"CommutationMultiplier\"); \r\n  let commutationMultiplierList=filter(mdmsCommutationMultiplier,function(x){return x.ageOnNextBirthDay==ageOnNextBirthDay;});\r\n\r\n  if(commutationMultiplierList && commutationMultiplierList.length>0){\r\n    value=commutationMultiplierList[0]? commutationMultiplierList[0].value:0;\r\n  }\r\n  \r\n  \r\n  return value;\r\n};\r\n\r\nexport const getIRPercentage = (effectiveDate,mdms) => { \r\n  let value=0;\r\n  const mdmsIRPercentage=get(mdms,\"MdmsRes.pension.IRPercentage\");  \r\n  //const mdmsIRPercentage=get(mdms,\"IRPercentage\");  \r\n  let irPercentageList=filter(mdmsIRPercentage,function(x){return gte(new Date(effectiveDate),new Date(x.startDate)) \r\n                        && lte(new Date(effectiveDate),new Date(x.endDate)) && x.endDate!=null;});\r\n\r\n  if(irPercentageList && irPercentageList.length>0){\r\n    value=irPercentageList[0]? irPercentageList[0].value:0;\r\n  }\r\n  else{\r\n    irPercentageList=filter(mdmsIRPercentage,function(x){return gte(new Date(effectiveDate),new Date(x.startDate)) \r\n      && x.endDate==null;});\r\n\r\n    if(irPercentageList && irPercentageList.length>0){\r\n      value=irPercentageList[0]? irPercentageList[0].value:0;\r\n    }\r\n\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getAdditionalPensionPercentage = (employee,mdms) => { \r\n  let value=0;\r\n  //let age=getAge(employee.dob);\r\n  let age=getAgeOnRetirementDate(employee.dob,employee.dateOfRetirement);\r\n  const mdmsAdditionalPensionPercentage=get(mdms,\"MdmsRes.pension.AdditionalPensionPercentage\");  \r\n  //const mdmsAdditionalPensionPercentage=get(mdms,\"AdditionalPensionPercentage\");\r\n  let additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge) \r\n                        && lte(age,Number(x.toAge)) && x.toAge!=null;});\r\n\r\n  if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n    value=additionalPensionPercentageList[0].value;\r\n  }\r\n  else{\r\n    additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge)\r\n      && x.toAge==null;});\r\n\r\n    if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n      value=additionalPensionPercentageList[0].value;\r\n    }\r\n\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getAdditionalPensionPercentageAfterRetirement = (dateOfBirth,effectiveDate,mdms) => { \r\n  let value=0;\r\n  //let age=getAge(employee.dob);\r\n  let age=Math.trunc(getYearDifference(dateOfBirth,effectiveDate));\r\n  const mdmsAdditionalPensionPercentage=get(mdms,\"MdmsRes.pension.AdditionalPensionPercentage\");  \r\n  //const mdmsAdditionalPensionPercentage=get(mdms,\"AdditionalPensionPercentage\");\r\n  let additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge) \r\n                        && lte(age,Number(x.toAge)) && x.toAge!=null;});\r\n\r\n  if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n    value=additionalPensionPercentageList[0].value;\r\n  }\r\n  else{\r\n    additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge)\r\n      && x.toAge==null;});\r\n\r\n    if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n      value=additionalPensionPercentageList[0].value;\r\n    }\r\n\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getPensionConfigurationValue = (key,mdms) => { \r\n  let value=\"\";    \r\n  \r\n  const mdmsConfigurations=get(mdms,\"MdmsRes.pension.configurations\");  \r\n  //const mdmsConfigurations=get(mdms,\"configurations\");\r\n  let configurationsList=filter(mdmsConfigurations,function(x){return x.key==key;});\r\n\r\n  if(configurationsList && configurationsList.length>0){\r\n    value=configurationsList[0].value;\r\n  }\r\n  \r\n  return value;\r\n};\r\n\r\nexport const getDOJ = (employee) => { \r\n  let doj=\"\";\r\n  let serviceHistory=employee.serviceHistory[0];\r\n  doj=serviceHistory.serviceFrom;     \r\n  return doj;\r\n};\r\n\r\nexport const getAge = (dob) => { \r\n  let age=0;  \r\n  let currentDateTime=new Date();\r\n  let today=new Date(currentDateTime.getFullYear(),currentDateTime.getMonth(),currentDateTime.getDate());\r\n  let currentYearDOB=new Date(today.getFullYear(),new Date(dob).getMonth(),new Date(dob).getDate());\r\n  if(currentYearDOB>today){\r\n    age=today.getFullYear()-new Date(dob).getFullYear()-1;\r\n  }\r\n  else{\r\n    age=today.getFullYear()-new Date(dob).getFullYear();\r\n  }\r\n  \r\n  \r\n  return age;\r\n};\r\n\r\nexport const getAgeOnRetirementDate = (dob,dateOfRetirement) => { \r\n  let age=0;  \r\n  //let currentDateTime=new Date();\r\n  let today=new Date(dateOfRetirement);\r\n  let dobOnRetirementYear=new Date(today.getFullYear(),new Date(dob).getMonth(),new Date(dob).getDate());\r\n\r\n  if(dobOnRetirementYear>today){\r\n    age=today.getFullYear()-new Date(dob).getFullYear()-1;\r\n  }\r\n  else{\r\n    age=today.getFullYear()-new Date(dob).getFullYear();\r\n  }\r\n  \r\n  \r\n  return age;\r\n};\r\n\r\nexport const getYearDifference = (dtPreviousDate,dtNextDate) => { \r\n  let age=0;  \r\n  \r\n  let pMonths = dtPreviousDate.getFullYear()*12+dtPreviousDate.getMonth()-1;\r\n  let nMonths = dtNextDate.getFullYear()*12+dtNextDate.getMonth()-1;\r\n\r\n  let diffYear = (nMonths-pMonths)/12;\r\n\r\n  return diffYear;\r\n};\r\n\r\nexport const isEldestDependent = (dependent,dependents) => { \r\n  let isEldestDependent=false;\r\n  let dependentAge=getAge(dependent.dob);  \r\n\r\n  let eligibleDependents=filter(dependents,function(x){return (x.relationship==\"SON\" || x.relationship==\"DAUGHTER\") && x.isEligibleForGratuity==true; });\r\n  if(eligibleDependents && eligibleDependents.length==1){\r\n    isEldestDependent=true;\r\n  }\r\n  else{\r\n    for (var i = 0; i < eligibleDependents.length; i++) { \r\n      eligibleDependents[i].age=getAge(eligibleDependents[i].dob);           \r\n    }\r\n    let eldestGratuityEligibleDependent=orderBy(eligibleDependents,['age'],['desc']);\r\n    if(eldestGratuityEligibleDependent[0].dob==dependent.dob \r\n      && eldestGratuityEligibleDependent[0].name==dependent.name\r\n      && eldestGratuityEligibleDependent[0].relationship==dependent.relationship){\r\n        isEldestDependent=true;\r\n      }\r\n\r\n  }\r\n \r\n  \r\n  return isEldestDependent;\r\n};\r\n\r\nexport const getAdditionalPensionPercentageForFamily = (dependents,mdms) => { \r\n  let value=0;\r\n  let pensionEligibleDependents=filter(dependents, function(x){return x.isEligibleForPension==true;});\r\n\r\n  if(pensionEligibleDependents && pensionEligibleDependents.length>0){\r\n    let dependent=pensionEligibleDependents[0];\r\n    let age=getAge(dependent.dob);\r\n    const mdmsAdditionalPensionPercentage=get(mdms,\"MdmsRes.pension.AdditionalPensionPercentage\");  \r\n    //const mdmsAdditionalPensionPercentage=get(mdms,\"AdditionalPensionPercentage\");\r\n    let additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge)\r\n      && x.toAge==null;});\r\n\r\n      if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n        value=additionalPensionPercentageList[0].value;\r\n      }\r\n      else{\r\n        additionalPensionPercentageList=filter(mdmsAdditionalPensionPercentage,function(x){return gte(age,x.fromAge)\r\n          && x.toAge==null;});\r\n    \r\n        if(additionalPensionPercentageList && additionalPensionPercentageList.length>0){\r\n          value=additionalPensionPercentageList[0].value;\r\n        }    \r\n      }    \r\n  }\r\n  \r\n\r\n  \r\n  \r\n  return value;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}